/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC_L 1
#define BLT_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6
#define NAV_L 7
#define LOC_L 8


// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };
&sk { release-after-ms = <750>; };

/ {
    combos {
        compatible = "zmk,combos";

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&mo FUN_L>;
        };
	
	combo_ret {
            timeout-ms = <60>;
            key-positions = <23 26>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp RET>;
        };
	
	combo_bksp {
            timeout-ms = <100>;
            key-positions = <14 24>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp BKSP>;
        };
	
	tog_mac {
            timeout-ms = <75>;
            key-positions = <16 17 18 19 32>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&tog MAC_L>;
        };
	
	tog_bluetooth {
	    timeout-ms = <50>;
            key-positions = <5 9 32>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&tog BLT_L>;
        };
	tog_num {
	    timeout-ms = <50>;
            key-positions = <30 32>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&tog NUM_L>;
        };
	
	nav_mo {
	    timeout-ms = <150>;
            key-positions = <11 12 13 20>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&mo NAV_L>;
	};
	
	thumb_tab {
	    timeout-ms = <55>;
            key-positions = <31 32>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp TAB>;
	};
	
	thumb_alt {
	    timeout-ms = <75>;
            key-positions = <30 33>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp RALT>;
	};

	chg_lang {
	    timeout-ms = <50>;
            key-positions = <0 4 31>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp LG(SPACE)>;
	};
	
	command_lgui {
	    timeout-ms = <50>;
            key-positions = <31 33>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp LCMD>;
	};
	
	bt_clear {
	    timeout-ms = <50>;
            key-positions = <6 7 8 9>;
	    layers = <2>;
            bindings = <&bt BT_CLR>;
	};
	
	lock_board {
	    timeout-ms = <125>;
            key-positions = <1 8 12 13 16 17>;
            bindings = <&tog LOC_L>;
	};
	
	
	//steno punctuation .,!?;
	
	steno_fullstop {
	    timeout-ms = <75>;
            key-positions = <11 12 17 18>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp DOT>;
	};
	
	steno_comma {
	    timeout-ms = <75>;
            key-positions = <21 22 27 28>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp COMMA>;
	};
	
	steno_exclam {
	    timeout-ms = <75>;
            key-positions = <11 12 27 28>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp EXCL>;
	};
	
	steno_ques {
	    timeout-ms = <75>;
            key-positions = <21 22 17 18>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp QMARK>;
	};
	
	semicol {
	    timeout-ms = <75>;
            key-positions = <1 2 7 8>;
	    layers = <0 1 2 3 4 5 6 7>;
            bindings = <&kp SEMI>;
	};

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	
	lm: long_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "long hm mods";
            #binding-cells = <2>;
            tapping_term_ms = <210>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Win";
            bindings = <
                &kp Q      &lm LS(N7) W      &lm LS(N8) F        &lm LS(N9) P         &kp B         &kp J            &kp L          &kp U       &kp Y      &hm DQT QUOT
                &kp A	   &lm LS(N4) R      &lm LS(N5) S        &lm LS(N6) T         &kp G         &kp M            &kp N          &kp E       &kp I      &kp O
                &kp Z 	   &lm LS(N1) X      &lm LS(N2) C        &lm LS(N3) D         &kp V         &kp K            &kp H          &hm SEMI COMMA   &hm EXCL DOT &kp FSLH
                                                  &sk LSHFT	 &lt MED_L SPACE      &mo NUM_L	    &kp LCTRL
            >;
        };
	
	mac_layer {
            label = "Mac";
            bindings = <
                &kp Q      &lm LS(N7) W      &lm LS(N8) F        &lm LS(N9) P         &kp B         &kp J            &kp L          &kp U       &kp Y      &hm DQT QUOT
                &kp A	   &lm LS(N4) R      &lm LS(N5) S        &lm LS(N6) T         &kp G         &kp M            &kp N          &kp E       &kp I      &kp O
                &kp Z 	   &lm LS(N1) X      &lm LS(N2) C        &lm LS(N3) D         &kp V         &kp K            &kp H          &hm SEMI COMMA   &hm EXCL DOT &kp FSLH
                                                  &sk LSHFT	 &lt MED_L SPACE      &mo NUM_L	    &kp LGUI
            >;
	};

        bluetooth_layer {
            label = "BT";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans	 &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <	

                &kp SPACE  &kp N7     &kp N8      &kp N9          &kp BSLH      &kp TILDE       &kp LBKT        &sk RSHFT   &kp RBKT     &kp DEL
                &kp SEMI   &kp N4     &kp N5	  &kp N6       	  &kp EQUAL     &kp PLUS        &kp LPAR        &kp DOT     &kp RPAR     &kp N0
                &kp LT	   &kp N1     &kp N2      &kp N3          &kp GT        &kp GRAVE       &kp LBRC        &kp COMMA   &kp RBRC     &kp FSLH
                                                  &kp MINUS       &mo SYM_L     &trans          &trans
            >;
        };
	
	sym_layer {
            label = "Sym";
            bindings = <
                &kp SPACE    &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp LS(BSLH)    &trans          &kp LBKT        &trans	    &kp RBKT     &kp DEL
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &kp PLUS        &kp LPAR        &kp DOT     &kp RPAR     &kp LS(N0)
                &kp LT       &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp GT          &trans          &kp LBRC        &kp COMMA   &kp RBRC     &trans
                                                     &kp UNDER  &trans          &trans 		&trans
            >;
        };


        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
	
        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &kp PG_UP    &kp UP    &kp PG_DN     &kp DEL
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LEFT     &none     &kp RIGHT     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LC(LEFT) &kp DOWN  &kp LC(RIGHT) &kp END
                                                  &kp LCTRL       &kp ESC      &trans	        &trans
            >;
        };
	
	locked_layer {
            label = "LOCKED";
            bindings = <
                &none      &none      &none        &none      &none          	&none          &none         &none      &none     &none
                &none      &none      &none        &none      &none          	&none          &none         &none      &none     &none
                &none      &none      &none        &none      &none   		&none          &none         &none      &none     &none
                                                   &none      &none             &none          &none          
            >;
        };
    };
};
